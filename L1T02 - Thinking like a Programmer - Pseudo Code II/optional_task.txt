1 1 2 3 5 8 13 21 34

Fibonacci Algorithm 

Ask the user to input a number;
Store the number in a variable called "n";
Print the fibonacci sequence to equal the number 'n' i.e. if the user entered 5, then the first 5 number of the Fibonacci sequence
will be printed or displayed to the user i.e. 0 1 1 2 3 and this can be achieved by writing a function that:
References "n" to determine if the user entry is less than or equal to "n". 
If "n" is equal to 0, the functions stops and prints out 0.
If it is not zero, the programme will then add the second number in the Fibonacci sequence to zero, namely 1, and store the 
sum of that computation in a new variable called "y" and print out 0 to the user, starting the first number of the Fibonacci sequence. 
At this point "y" is equal to 1. The function must then also account for the computation it just did and save that event as a number in 
a new variable named "totals", which then at this point would also be 1. The function then checks if "totals" is less than or equal to "n". 
If it is equal to "n", it stops and prints out "n". If it is not equal to "n", it proceeds to add 1 to "y" and save that total to a new variable 
named "x", which is now 2, and increments variable 'totals" by 1 which is now also 2. 
It then checks to see if "totals" is equal to or less than "n". If it is equal to "n" it prints out "n". 
If it is not equal to and less than "n" it adds "y" to "x" and saves that sum to "y", overwriting the previous value of 1 to the new value of 3.





